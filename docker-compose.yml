version: '3.7'

services:

  traefik:
    image: "traefik:v2.2"
    command:
      - --entrypoints.web.address=:80
      - --providers.docker
      - --api.insecure
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - internal

  f05_backend:
    build: ./
    container_name: "f05_backend"
    labels:
      - "traefik.http.routers.f05_backend.rule=PathPrefix(`/f05_backend`)"
      - "traefik.http.services.f05_backend.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.f05_backend.stripprefix.prefixes=/f05_backend"
      - "traefik.http.routers.f05_backend.middlewares=f05_backend@docker"
    volumes:
      - ./images/:/f05_backend/images
      - ./f05_backend.env:/f05_backend/f05_backend.env
    depends_on:
      - database
    networks:
      - postgres-compose-network
      - internal

  database:
    image: postgres
    env_file:
      - database.env # configure postgres
    volumes:
      - database-data:/var/lib/postgresql/data/ # persist data even if container shuts down
    networks:
      - postgres-compose-network

  pgAdmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "walterjgsp@dcc.ufmg.br"
      PGADMIN_DEFAULT_PASSWORD: "PgAdmin2020!"
      SCRIPT_NAME: "/pgAdmin"
    depends_on:
      - database
    networks:
      - postgres-compose-network
      - internal
    labels:
      - "traefik.http.routers.pgAdmin.rule=PathPrefix(`/pgAdmin`)"
      - "traefik.http.middlewares.pgAdmin.stripprefix.prefixes=/pgAdmin"
      - "traefik.http.middlewares.pgadmin.stripprefix.forceslash=false"
#      - "traefik.http.routers.pgAdmin.middlewares=pgAdmin@docker"

volumes:
  database-data: # named volumes can be managed easier using docker-compose

networks:
  postgres-compose-network:
    driver: bridge
    external: false
  internal: